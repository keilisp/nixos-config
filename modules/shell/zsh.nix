{ config, options, pkgs, lib, ... }:

with lib;
with lib.my;
let cfg = config.modules.shell.zsh;
in {
  options.modules.shell.zsh = with types; {
    enable = mkBoolOpt false;

    aliases = mkOpt (attrsOf (either str path)) { };

    rcInit = mkOpt' lines "" ''
      Zsh lines to be written to $XDG_CONFIG_HOME/zsh/extra.zshrc and sourced by
      $XDG_CONFIG_HOME/zsh/.zshrc
    '';
    envInit = mkOpt' lines "" ''
      Zsh lines to be written to $XDG_CONFIG_HOME/zsh/extra.zshenv and sourced
      by $XDG_CONFIG_HOME/zsh/.zshenv
    '';

    rcFiles = mkOpt (listOf (either str path)) [ ];
    envFiles = mkOpt (listOf (either str path)) [ ];
  };

  config = mkIf cfg.enable {
    users.defaultUserShell = pkgs.zsh;

    programs.zsh = {
      enable = true;
      enableCompletion = true;
      syntaxHighlighting.enable = true;
      # I init completion myself, because enableGlobalCompInit initializes it
      # too soon, which means commands initialized later in my config won't get
      # completion, and running compinit twice is slow.
      enableGlobalCompInit = false;
      autosuggestions.enable = true;
      promptInit = "";

      histSize = 1000000;

      ohMyZsh = { enable = true; };

    };

    # home-manager.users.${config.user.name}.programs.zsh = {
    # plugins = [
    #   {
    #     name = "zsh-autosuggestions";
    #     file = "zsh-autosuggestions.zsh";
    #     src = pkgs.fetchFromGitHub {
    #       owner = "zsh-users";
    #       repo = "zsh-autosuggestions";
    #       rev = "v0.6.4";
    #       sha256 = "0h52p2waggzfshvy1wvhj4hf06fmzd44bv6j18k3l9rcx6aixzn6";
    #     };
    #   }
    #   {
    #     name = "zsh-abbrev-alias";
    #     file = "abbrev-alias.plugin.zsh";
    #     src = fetchFromGitHub {
    #       owner = "momo-lab";
    #       repo = "zsh-abbrev-alias";
    #       rev = "b9fecabca3798785f262976d5ffb315a134e1344";
    #       sha256 = "0gcc9017yyz0kf7lwqaqgaxw23pl5icwsx44w4fkhx8whqn5yxw1";
    #     };
    #   }

    #   {
    #     name = "zsh-abbr";
    #     file = "zsh-abbr.plugin.zsh";
    #     src = fetchFromGitHub {
    #       owner = "olets";
    #       repo = "zsh-abbr";
    #       rev = "3a3a63054745e429f6a15fcc876dfa7bce5deebd";
    #       sha256 = "0jyn6k5l89hhj78ylbi40nk0p8xgxkgaqj957bnbybx9khvhn88s";
    #     };
    #   }

    #   {
    #     name = "geometry";
    #     file = "geometry.plugin.zsh";
    #     src = fetchFromGitHub {
    #       owner = "geometry-zsh";
    #       repo = "geometry";
    #       rev = "a8033e0e9a987c1a6ee1813b7cad7f28cfd3c869";
    #       sha256 = "sha256-BepZ2+E4feT65tWLoI7gZisD5IW1KDKgUo+0F+Mg39k=";
    #       # date = 2019-09-02T11:00:58-04:00;
    #     };
    #   }
    #   {
    #     name = "z";
    #     file = "zsh-z.plugin.zsh";
    #     src = fetchFromGitHub {
    #       owner = "agkozak";
    #       repo = "zsh-z";
    #       rev = "09209db2daf4b0e7f180cea04d1344fcc06a9410";
    #       sha256 = "06z96v3w998hcws13lj6332154aqg1qg3ignv2x835frq677yfzm";
    #       # date = 2020-09-18T18:25:43-07:00;
    #     };
    #   }
    # ];
    # };

    user.packages = with pkgs; [
      zsh
      nix-zsh-completions
      zsh-syntax-highlighting
      bat
      exa
      fasd
      ncdu
      fd
      fzf
      neofetch
      jq
      tldr
      ripgrep
      killall
      xorg.xkill
    ];

    env = {
      ZDOTDIR = "$XDG_CONFIG_HOME/zsh";
      ZSH_CACHE = "$XDG_CACHE_HOME/zsh";
      ZGEN_DIR = "$XDG_DATA_HOME/zsh";
      ZGEN_SOURCE = "$ZGEN_DIR/zgen.zsh";
    };

    # home.dataFile = {
    #   "zgen" = pkgs.fetchFromGitHub {
    #     owner = "tarjoilija";
    #     repo = "zgen";
    #     rev = "0b669d2d0dcf788b4c81a7a30b4fa41dfbf7d1a7";
    #     sha256 = "02ky8l12axb7v30fnkmjvhn4kjbmdrrr7irza3015yp9728vvfp6";
    #   };
    # };

    home.configFile = {
      # Write it recursively so other modules can write files to it
      "zsh" = {
        source = "${configDir}/zsh";
        recursive = true;
      };

      # Why am I creating extra.zsh{rc,env} when I could be using extraInit?
      # Because extraInit generates those files in /etc/profile, and mine just
      # write the files to ~/.config/zsh; where it's easier to edit and tweak
      # them in case of issues or when experimenting.
      "zsh/extra.zshrc".text = let
        aliasLines = mapAttrsToList (n: v: ''alias ${n}="${v}"'') cfg.aliases;
      in ''
        # This file was autogenerated, do not edit it!
        ${concatStringsSep "\n" aliasLines}
        ${concatMapStrings (path: ''
          source '${path}'
        '') cfg.rcFiles}
        ${cfg.rcInit}
      '';

      "zsh/extra.zshenv".text = ''
        # This file is autogenerated, do not edit it!
        ${concatMapStrings (path: ''
          source '${path}'
        '') cfg.envFiles}
        ${cfg.envInit}
      '';
    };

    system.userActivationScripts.cleanupZgen = "rm -fv $XDG_CACHE_HOME/zsh/*";
  };
}
